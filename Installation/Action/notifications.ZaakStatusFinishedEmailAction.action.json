{
    "title": "ZaakCreatedEmailAction",
    "$id": "https://commongateway.nl/action/notifications.ZaakStatusFinishedEmailAction.action.json",
    "$schema": "https://docs.commongateway.nl/schemas/Action.schema.json",
    "version": "0.0.1",
    "listens": ["notifications.zaak.status.finished.email"],
    "conditions":
    {
        "==": [1, 1]
    },
    "class": "CommonGateway\\CustomerNotificationsBundle\\ActionHandler\\EmailHandler",
    "configuration":
    {
        "serviceDNS": "",
        "template": "PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIKICAgICAgICAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIvPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiLz4KICAgIDx0aXRsZT57eyBzdWJqZWN0IH19PC90aXRsZT4KICAgIDxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIvPgogICAgPGxpbmsKICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1GYXVzdGluYTp3Z2h0QDYwMCZkaXNwbGF5PXN3YXAiCiAgICAgICAgICAgIHJlbD0ic3R5bGVzaGVldCIKICAgIC8+CiAgICA8bGluawogICAgICAgICAgICBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVNvdXJjZStTYW5zK1BybyZkaXNwbGF5PXN3YXAiCiAgICAgICAgICAgIHJlbD0ic3R5bGVzaGVldCIKICAgIC8+CiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgbWVkaWE9ImFsbCI+CiAgICAgICAgLyogQmFzZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KICAgICAgICBib2R5IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIG1zby1saW5lLWhlaWdodC1ydWxlOiBleGFjdGx5OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMS40OwogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwogICAgICAgICAgICBjb2xvcjogIzc0Nzg3ZTsKICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOwogICAgICAgIH0KICAgICAgICBwLAogICAgICAgIHVsLAogICAgICAgIG9sLAogICAgICAgIGJsb2NrcXVvdGUgewogICAgICAgICAgICBtc28tbGluZS1oZWlnaHQtcnVsZTogZXhhY3RseTsKICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDsKICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgICAgICB9CiAgICAgICAgYSB7CiAgICAgICAgICAgIGNvbG9yOiAjMWQ1NWZmOwogICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICAgICAgfQogICAgICAgIGE6aG92ZXIgewogICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICAgICAgICB9CiAgICAgICAgcCBhIHsKICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7CiAgICAgICAgfQogICAgICAgIGEgaW1nIHsKICAgICAgICAgICAgYm9yZGVyOiBub25lOwogICAgICAgIH0KICAgICAgICB0ZCB7CiAgICAgICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7CiAgICAgICAgfQogICAgICAgIC8qIExheW91dCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KICAgICAgICAuaGVhZGVyIHsKICAgICAgICAgICAgYmFja2dyb3VuZDogIzFkNTVmZjsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIGhlaWdodDogMjM2cHg7CiAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsKICAgICAgICB9CiAgICAgICAgLmhlYWRlci1jZWxsIHsKICAgICAgICAgICAgcGFkZGluZzogMTZweCAyNHB4OwogICAgICAgIH0KICAgICAgICAuZW1haWwtd3JhcHBlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7CiAgICAgICAgICAgIC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7CiAgICAgICAgfQogICAgICAgIC5lbWFpbC1jb250ZW50IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgLXByZW1haWxlci13aWR0aDogMTAwJTsKICAgICAgICAgICAgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsKICAgICAgICAgICAgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsKICAgICAgICB9CiAgICAgICAgLyogTWFzdGhlYWQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KICAgICAgICAuZW1haWwtbWFzdGhlYWQgewogICAgICAgICAgICBwYWRkaW5nOiAyNXB4IDA7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICB9CiAgICAgICAgLmVtYWlsLW1hc3RoZWFkX2xvZ28gewogICAgICAgICAgICB3aWR0aDogOTRweDsKICAgICAgICB9CiAgICAgICAgLmVtYWlsLW1hc3RoZWFkX25hbWUgewogICAgICAgICAgICBmb250LXNpemU6IDE2cHg7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7CiAgICAgICAgICAgIGNvbG9yOiAjYmJiZmMzOwogICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICAgICAgICAgIHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOwogICAgICAgIH0KICAgICAgICAvKiBCb2R5IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqLwogICAgICAgIC5lbWFpbC1ib2R5IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgLXByZW1haWxlci13aWR0aDogMTAwJTsKICAgICAgICAgICAgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsKICAgICAgICAgICAgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsKICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTsKICAgICAgICB9CiAgICAgICAgLmVtYWlsLWJvZHlfaW5uZXIgewogICAgICAgICAgICB3aWR0aDogNjQwcHg7CiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsKICAgICAgICAgICAgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsKICAgICAgICAgICAgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsKICAgICAgICB9CiAgICAgICAgLmVtYWlsLWZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiA2NDBweDsKICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OwogICAgICAgICAgICAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOwogICAgICAgICAgICAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOwogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgfQogICAgICAgIC5lbWFpbC1mb290ZXIgcCB7CiAgICAgICAgICAgIGNvbG9yOiAjYWVhZWFlOwogICAgICAgIH0KICAgICAgICAuYm9keS1hY3Rpb24gewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgbWFyZ2luOiA0MHB4IGF1dG87CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7CiAgICAgICAgICAgIC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICB9CiAgICAgICAgLmJvZHktc3ViIHsKICAgICAgICAgICAgbWFyZ2luLXRvcDogMjVweDsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDI1cHg7CiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWRlZmYyOwogICAgICAgIH0KICAgICAgICAuY29udGVudC1jZWxsIHsKICAgICAgICAgICAgcGFkZGluZzogMzZweCAxNnB4OwogICAgICAgIH0KICAgICAgICAucHJlaGVhZGVyIHsKICAgICAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OwogICAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47CiAgICAgICAgICAgIG1zby1oaWRlOiBhbGw7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXB4OwogICAgICAgICAgICBtc28tbGluZS1oZWlnaHQtcnVsZTogZXhhY3RseTsKICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDFweDsKICAgICAgICAgICAgbWF4LWhlaWdodDogMDsKICAgICAgICAgICAgbWF4LXdpZHRoOiAwOwogICAgICAgICAgICBvcGFjaXR5OiAwOwogICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICAgIH0KICAgICAgICAvKiBBdHRyaWJ1dGUgbGlzdCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KICAgICAgICAuYXR0cmlidXRlcyB7CiAgICAgICAgICAgIG1hcmdpbjogMCAwIDIxcHg7CiAgICAgICAgfQogICAgICAgIC5hdHRyaWJ1dGVzX2NvbnRlbnQgewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZmYyOwogICAgICAgICAgICBwYWRkaW5nOiAxNnB4OwogICAgICAgIH0KICAgICAgICAuYXR0cmlidXRlc19pdGVtIHsKICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICB9CiAgICAgICAgLyogUmVsYXRlZCBJdGVtcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KICAgICAgICAucmVsYXRlZCB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDI1cHggMCAwIDA7CiAgICAgICAgICAgIC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7CiAgICAgICAgICAgIC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7CiAgICAgICAgfQogICAgICAgIC5yZWxhdGVkX2l0ZW0gewogICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDA7CiAgICAgICAgICAgIGNvbG9yOiAjNzQ3ODdlOwogICAgICAgICAgICBmb250LXNpemU6IDE1cHg7CiAgICAgICAgICAgIG1zby1saW5lLWhlaWdodC1ydWxlOiBleGFjdGx5OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMThweDsKICAgICAgICB9CiAgICAgICAgLnJlbGF0ZWRfaXRlbS10aXRsZSB7CiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICAgICAgICBtYXJnaW46IDAuNWVtIDAgMDsKICAgICAgICB9CiAgICAgICAgLnJlbGF0ZWRfaXRlbS10aHVtYiB7CiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDsKICAgICAgICB9CiAgICAgICAgLnJlbGF0ZWRfaGVhZGluZyB7CiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWRlZmYyOwogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgICAgIHBhZGRpbmc6IDI1cHggMCAxMHB4OwogICAgICAgIH0KICAgICAgICAvKiBVdGlsaXRpZXMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCiAgICAgICAgLm5vLW1hcmdpbiB7CiAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICB9CiAgICAgICAgLm1hcmdpbi10b3AgewogICAgICAgICAgICBtYXJnaW4tdG9wOiA4cHg7CiAgICAgICAgfQogICAgICAgIC5hbGlnbi1yaWdodCB7CiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0OwogICAgICAgIH0KICAgICAgICAuYWxpZ24tbGVmdCB7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICAgICAgfQogICAgICAgIC5hbGlnbi1jZW50ZXIgewogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgfQogICAgICAgIC8qTWVkaWEgUXVlcmllcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgICAgIC5lbWFpbC1ib2R5X2lubmVyLAogICAgICAgICAgICAuZW1haWwtZm9vdGVyIHsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkgewogICAgICAgICAgICAuYnV0dG9uIHsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLyogQ2FyZHMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCiAgICAgICAgLmNhcmQgewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTFlNTsKICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2UwZTFlNTsKICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUxZTU7CiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2UwZTFlNTsKICAgICAgICAgICAgcGFkZGluZzogMjRweDsKICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgICAgICBjb2xvcjogIzM5MzkzYTsKICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4OwogICAgICAgICAgICBib3gtc2hhZG93OiAwIDRweCAzcHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMDgpOwogICAgICAgICAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7CiAgICAgICAgICAgIG1zby1saW5lLWhlaWdodC1ydWxlOiBleGFjdGx5OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMS43NTsKICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuOHB4OwogICAgICAgIH0KICAgICAgICAvKiBCdXR0b25zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqLwogICAgICAgIC5idXR0b24gewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWRiNGVkOwogICAgICAgICAgICBib3JkZXItdG9wOiAxMHB4IHNvbGlkICMxZGI0ZWQ7CiAgICAgICAgICAgIGJvcmRlci1yaWdodDogMThweCBzb2xpZCAjMWRiNGVkOwogICAgICAgICAgICBib3JkZXItYm90dG9tOiAxMHB4IHNvbGlkICMxZGI0ZWQ7CiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxOHB4IHNvbGlkICMxZGI0ZWQ7CiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgICAgICAgICBib3gtc2hhZG93OiAwIDJweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE2KTsKICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOwogICAgICAgICAgICBtc28tbGluZS1oZWlnaHQtcnVsZTogZXhhY3RseTsKICAgICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICAgICAgICBmb250LXdlaWdodDogNjAwOwogICAgICAgIH0KICAgICAgICAuc21hbGwtbG9nbyB7CiAgICAgICAgICAgIHdpZHRoOiAyNHB4OwogICAgICAgICAgICBoZWlnaHQ6IDI0cHg7CiAgICAgICAgfQogICAgICAgIC5pbmxpbmUgewogICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7CiAgICAgICAgfQogICAgICAgIC8qIFR5cGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCiAgICAgICAgcCB7CiAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgY29sb3I6ICMzOTM5M2E7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDsKICAgICAgICAgICAgbXNvLWxpbmUtaGVpZ2h0LXJ1bGU6IGV4YWN0bHk7CiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiBub3JtYWw7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwogICAgICAgIH0KICAgICAgICBwICsgcCB7CiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7CiAgICAgICAgfQogICAgICAgIHAuc3VmZml4IHsKICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICAgIH0KICAgICAgICBwLnN1YiB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsKICAgICAgICB9CiAgICAgICAgcC5jZW50ZXIgewogICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgfQogICAgICAgIC5zdWJ0bGUgewogICAgICAgICAgICBjb2xvcjogI2IxYjFiMTsKICAgICAgICB9CiAgICAgICAgLyogRm9vdGVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqLwogICAgICAgIC5sb2dvLWxhYmVsIHsKICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsKICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICAgICAgICBtYXJnaW4tbGVmdDogNHB4OwogICAgICAgIH0KICAgICAgICAuZm9vdGVyLWNlbGwgewogICAgICAgICAgICBwYWRkaW5nOiA4cHggMjRweDsKICAgICAgICB9CiAgICAgICAgLmZvb3Rlci1uYXYgewogICAgICAgICAgICBtYXJnaW4tbGVmdDogOHB4OwogICAgICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgICAgIGNvbG9yOiAjMzkzOTNhOwogICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICAgICAgfQogICAgICAgIC5oZWFkZXItbGluayB7CiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICAgICAgICBjb2xvcjogIzFkNTVmZjsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsKICAgICAgICB9CiAgICAgICAgLm1hcmdpbi10b3AgewogICAgICAgICAgICBtYXJnaW4tdG9wOiAxNnB4OwogICAgICAgIH0KICAgICAgICAubG9nby1jb250YWluZXIgewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNTZweDsKICAgICAgICB9CiAgICAgICAgLmxvZ28gewogICAgICAgICAgICB3aWR0aDogMjglOwogICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICB9CiAgICAgICAgLyogQ3VzdG9tIHN0eWxlcyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KICAgICAgICBociB7CiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZDlkOWRlOwogICAgICAgICAgICBjb2xvcjogI2Q5ZDlkZTsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZDlkZTsKICAgICAgICAgICAgbWFyZ2luLXRvcDogMzJweDsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDsKICAgICAgICB9CiAgICAgICAgaDEgewogICAgICAgICAgICBmb250LWZhbWlseTogIkZhdXN0aW5hIiwgc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsKICAgICAgICAgICAgY29sb3I6ICMyMzIzMjY7CiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIycHg7CiAgICAgICAgfQogICAgICAgIHAgewogICAgICAgICAgICBmb250LWZhbWlseTogIlNvdXJjZSBTYW5zIFBybyIsIHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjsKICAgICAgICAgICAgY29sb3I6ICMyMzIzMjY7CiAgICAgICAgfQogICAgICAgIC5idXR0b24gewogICAgICAgICAgICBmb250LWZhbWlseTogIlNvdXJjZSBTYW5zIFBybyIsIHNhbnMtc2VyaWY7CiAgICAgICAgfQogICAgICAgIC5jb250ZW50LWNlbGwgewogICAgICAgICAgICBwYWRkaW5nOiA0MHB4IDQwcHg7CiAgICAgICAgfQogICAgICAgIC5idXR0b24gewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1YTI2OwogICAgICAgICAgICBib3JkZXItdG9wOiAxMHB4IHNvbGlkICNmZjVhMjY7CiAgICAgICAgICAgIGJvcmRlci1yaWdodDogMThweCBzb2xpZCAjZmY1YTI2OwogICAgICAgICAgICBib3JkZXItYm90dG9tOiAxMHB4IHNvbGlkICNmZjVhMjY7CiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxOHB4IHNvbGlkICNmZjVhMjY7CiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgICAgIHdpZHRoOiBhdXRvOwogICAgICAgICAgICBib3gtc2hhZG93OiBub25lOwogICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDsKICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOwogICAgICAgICAgICBtc28tbGluZS1oZWlnaHQtcnVsZTogZXhhY3RseTsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7CiAgICAgICAgfQogICAgPC9zdHlsZT4KPC9oZWFkPgo8Ym9keT4KPHRhYmxlIGNsYXNzPSJlbWFpbC13cmFwcGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4KICAgIDx0cj4KICAgICAgICA8dGQgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgIDx0YWJsZQogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJlbWFpbC1jb250ZW50IgogICAgICAgICAgICAgICAgICAgIHdpZHRoPSIxMDAlIgogICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIgogICAgICAgICAgICAgICAgICAgIGNlbGxzcGFjaW5nPSIwIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJlbWFpbC1tYXN0aGVhZCI+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8IS0tIEVtYWlsIEJvZHkgLS0+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZW1haWwtYm9keSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPSIxMDAlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHBhZGRpbmc9IjAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsc3BhY2luZz0iMCIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJlbWFpbC1ib2R5X2lubmVyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjEwMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcj0iI2VkZWZmMiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsc3BhY2luZz0iMCIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBCb2R5IGNvbnRlbnQgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+PC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgd2lkdGg9IjEwMCUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+SGFsbG97JSBpZiBuYW1lfGRlZmF1bHQgJX0ge3sgbmFtZSB9fXslIGVuZGlmICV9LDwvaDE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGlmIGhlYWRlcnxkZWZhdWx0ICV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBoZWFkZXIgfCBubDJiciB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZW5kaWYgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgaWYgYm9keXxkZWZhdWx0ICV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBib2R5IHwgbmwyYnIgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZW5kaWYgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgaWYgZm9vdGVyfGRlZmF1bHQgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGZvb3RlciB8IG5sMmJyIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPk1ldCB2cmllbmRlbGlqa2UgZ3JvZXQsPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5Db25kdWN0aW9uPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dvLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJsb2dvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9ImRhdGE6aW1hZ2UvanBnO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBT0VBQUFEaENBTUFBQUFKYlNKSUFBQUFpbEJNVkVYLy8vOURkdncrYy94V2cvelg0djgzYi96djgvOXdsdjJ4d3Y0OGN2eTB4LzVuanZ6RzFQN2g2UC84L2Y4emJ2ejMrZjh2YS96bjd2L1IzZjVTZ1B4SWV2enQ4ZitodVAxdGt2eGZpdjI4elA3ejl2OUVlUHlJcHYyQW9mMllzZjRxYVB6SjJQNTRtdnlodXYzZDVmN0gxZjZPcXYyNHl2Nnh3LzZhc3YxZ2kveURvLzFkaHZ5cHZ2NXhQNWhFQUFBS1VFbEVRVlI0bk8xZGFYdnlLaFI4ZzZMaWxyMG1hclJhYTlYcS8vOTcxM1M3YWtNeUpDRFloL25jS2lPSDVTeWMrZmZQd3NMQ3dzTEN3c0xDd3NMQ3dzTEN3c0xpRDJMVWRVNmU3a0VveE5NcFlvNi9IdW9laHpJTWo0UTRqc1BpOVV6M1VKUWdUTjJjWHc3bUxnUGR3NUdPMFlSKzg4dmhwdE0vdGh4ZldzeTVBbkhXb2U1QnlZTTNqVnppM0lJOEwwYTZSeVlKN1FYNXplOWpPYlltSGQyRGs0RFpNbUtGL1BKcFpNbFU5L2lhWXRiM0tZL2ZCMGMvSFkxMUQ3SUpwbDN1L1Axd25DODN1b2RaRzBFMnJ5VDRzUno3dWtkYUQ1MHRSZmpsMCtpMmhvOTNPbnI5ZzR2eCsrU1l0WFdQV0JDYnhDaytJYmltR20xMWoxa0VtNFV2eGk4SGRmcVBjam8rOWFBTnBvQmpzbnFJazJONnFNZlB5ZjJxekhpZll4d21OUXowZ3FNL01adGpzSzFwb0JjYzA1M0JwdHBMUzY5b0dBaFpHM3B5ZU1PNHdFZXFBK1oybjNTektjQXE0L2hJdFRpMlRxYWRITjQrUnE5bzJGK1JkS1diMHlXOGt3TXVRQllkd0trbTdzQ2NNTWR3N1dQOHpoNXZHT3hpOU5kd0ptYUVPV1pyMUVCcDlIRXZHMlVVWExIc2VOTE43bndDTGwyUTM4WGRlcFBNVVZPTlh2WDZWZDQwQlgwazRtN2JsLytIK2xiRVdlZ01BWVJyZEd2MGo4UHJtMHBuajg0OWJlMTFKUUZHMlRPNm5vcmlGTUhXd1RnU1NxYzZPSFltdDJGc0xyOTRYN3duQW5HcTc0L28zai9xT0V3WWFxQURicnh3TnFYZ3Rzcm0yN3RlNU1hakZQU1J6aWRnYWJad3RtK2hwNk83djk5RmJyTUVOL3Y4ZmxtMWdqWUxOS0xqSHU2VnIrckRDL0I1QzdpejNtdFIzcVlJWko3YzRaTGpEVnZvZVBEODJla0lSMVl6MVJ6Ykdlb0RDdVZBYi9LbkphRHhUdWx5M1BMelNOZGdiQzhXYndrSHFHa1FkZm1xVGgvMmtlS0YrQkc5U2xHL3l1K0dLa0k1NHpCQmd6RCsrclhPTjNST3NJWEVDaW9kZ2d6MmtaeCszVTM5cVFzN0txbmtmRlV3OFdFZmFkTEVndHByT0FRUXIrU2RqdVArQU4zTldkWXc5RERlcGVoM2thMnNNTWVkZjllNzJjczNSTmJHcnZyalpzQnBGcnpqYTM3WDlDZnRuSEFmQ2RuZndnWGlCNDFYK0w2OXFMVnYvMER5R1RVNzN4allITGw0Q1oyOURTNDVQZENKSjJRQXpNeDM1UW1qUzJSTUdYbzYwcmgrbnFPSC9ZN1lYZkV0K1JteGUwQ09UUFFPVEZyMUdlNFFob1FpWmpkYVhFWmxpSk1BT3ozb3h6UmhDTXpoMldjRG9uMmQ3TGJ5aExoSWxIQzhBelk2dFF3aHYzdTJLOG9yc25rUENMMEE4UVNWVnNyb0ZsaUE0WUFUcDJBSDRISlpIUk5TTjRmTVFZSVVtelYvTFJFL1FmeWdhWGxjVHhsREtJYjVkQ3BQN0xNNThpdDFKbEhKU05SWUthRzBEemk1L1VQbFhraFRKTDgwV3ZDUFppVnpDT1VTeHVFQmlhcWU3K3RJM1I0L1I2S0FJU0hJVGg5czBjUStJZTlBU3R1YkhqbkRrVzZsYm9UODVpZVJ5aE1XNzRHUERKYUZtNWIwT1l5QmRlTU5IY0hLRStwVVJzZlBtQTBLUGxVMlE5S3RIc2xxQWFadEx1RjNnZmRRYjBVamtteWxwRnQxeUhlV3FBTjc4OG5BZTZpK1pJYkZjMWpPY0RhWjF5NzlxbjRQWlFERFlWZWcrUGszNkxIOG5pdWJvYkNWQnV1NFllbFhSVDVIOHh3R1M3UTZ2NVJqMlhzb3JReG52Qk5aR0RUaXZvZlNhYVdoYUhWK0NmanZvZlROWWRuTnVCWkhQeDBWYlRtNkdENlZlamYxUUoyaXU2b21LNTB0OENzYW5pQm9GeDMvbXVhd1UrMEYvdkRycnBFNkRucDRLeDZSTG9aRjkrSENnUjk3M25oWW1WdzZleHE4R0pVbUt3VVpzdWZQTzFud1FzbzRFcitrVnQva09TVHp4YytkYzhaUEtCTW5LVXUxR015UXBxK1hVYlhWb3JodytxdU0rRzRNcFZrcFk2ZWJsZVgxNDk5WGRGYVpJREIwRGxtY0ZaemUzbTNwQlFPS3VveGtTT2lDRTJkcVg4V3EzQVJJRUpob3BXNzB4aDI0MS81NVNFVEpCQ2t5TW04T1dWVFJjT2Z0NDNSa01WZ2dheHBENG13cnZ6ell4NHpCVFhrTXMxSzMxVWFxUWRwcnZoM2Z3cXc1aklIaUUxRVl4WkMwRkR3Rk1jcEttM3d4RjRiTm9XVllBOVpLUmZIMzUvRHZNN1JXK2dYTFVDS3NsWXJpNzgvaDMyZG9yZlFMbHFGRVdDc1Z4ZCtmdzcvUDBGcnBGeXhEaWJCV0tvcG04ZEpJUVM4cnN4ZzZDYWZjNEJZci9QR1pVVmFhcHkyUWp0MmRMRTdnMlRac0R2TkdqMW5GL0hST1BpdnQ4SElONHhqbUJTYTdzcnhnLyt1eEtJdXhIZ3lHV2VubjN6djh6bktiaTI3dHBJV3NXZ1BuTVA4UHQxczRoRTUyOVdqN2Q3ZXNoMkdZMXlDY2Z0bmdyUGVySFBXNjQ5bGRHTXFyaVdLSG0yUmltQmFWbzVKb2YxK0dFaXVHaUgvNC95SGV1TjNsVkRNU0dwVytHRE9Zb1pOM2VmZzZIWU5KeVpNOXdzcEsyYzIxMGcvUTQwcytqYjIwb3NBbzRoK2lSczloL3IvVUdhN1M2bkpiNXZOYTBHcGkrRlF4S1plZ1dKRXdUWXFmQ091cTFYOTdsbDdtVFVqaGN0UldxMThtdFZJUG5QWVpHbCtVdE5kb1B6S01JT2NadGM0WEpjV1NSL1hBZjBhdCtkM1RMOW1xZW1EUmtudm82MzZkTjFvMk4xVkNGaVVEMXY0NmJ4d0NwMTBwdjRwbjFMcm5NTWV3MWFEN1BHdTlsSS9JQkliL2dwZTZKd2VobFMzSzcyT2xWZFhLNDlFYWJROTI5Y0ZJbS9tN3pPRUFLS29NdTZLbVNzZ1JxUk4rdVFQRHN6TUwxTlI3Z21JZUxMcDlrRkdFMFVSMmNMMjRhd1RXWERhWVBNT21Da3AyY001YkZiMU55RFBTL0NwWVlLSXoyQy9tRFhsM0pqVWRlQ0J4eHZIckFEQlZta0t0elhneWtTcXM5UE5qS3hwMWYrSnBSeW80c21kRS9xalVkMUhXUlFrVFovUktXK2V4K0IzaDE2ZWxBMUhYelF3VFp3emZ1WmRWT2tCa3lLcmE3eXZ0dVFlSk0zcHZ4WHNFSlR0Z0I2MldVRkRia1E0VFovUjJ2MDJWUlJrd0FrUW1VbkZYUVZDY3NiMjlEbkVUOXgzNEwrOE5rVEpSM2hrU0UyY2N0MXYvTi82cThwRytBTXJSTkpwRFVPVUlFMmVjZnArT3JJV0l4OEV5a1NTcXozQ0RDams1RkdrUDJObm55NUhNdDhBTzNObWhLbnlNdkRSb1F1c0pOTHRGeEJsSDYyYy9SWjdzVGVFd3VwOUFUd0Q1R0UvUXRsYVlPR09JTkVxR1pTSUpTU1gwOUY1bGFHc3lOdWpMNksrTnkwUlNTUko3M2dvVk5wUWl6dGhEbTdJemZ5RlBYUWR1QmMvY1p0OHE5R3RLZmNFWndGM21HbGtPdmlLb25CVnhnWEhZeFZkL3pZSTJYQ2FTK1UxT0NDN09Pemphb0QycHNSeGxuMHgxME1IRkdZbXdPQ01zRStrd3FQbHdUWXhnd1cxQmNVWUJtVWpWOHQwQzRveEhXSnd4MkROeG1VaGxrQy9PV0ZjbVVoMFFyL1FUdExXdlhqRzRUT1RaMjc2WG9MVkVjY2FHTXBIcUlDTE9XQkoxbkRXWGlWU0dQTUlIaWpQeWU4OEl5RVFpa1V2WmFDck9LRThtVWgwMi9FajdEUXBFSWdJQm1VaW93WklTOExNbHY2Ymh0bytYZ0V5a2NzbkRjdUJxU1JmaWpFcGtJcFZCUkp6eDY3NmxTQ1pTSFhCeFJ1ZWplYTQ2bVVoMVdCMWh2MnA5UWh1YTE1S0pWSVluV0p5eEtwLzRBeC91Y0hZbjRBSjBFQnJJUktvRExDSllEUlpMa2YyVERnK095SldEc0V6QnkwVTVFS2t3NGZLVEtyOHBIN2c0SXdjczdlbm1VQUVCY2NZaWZpcGtjS1dqVTFsaHdnTW80V1VDWUhIR0szNlFUS1Fwd0crZVAxQXRLUzRidUYvMU5ZRSs4aWphTEVEaWpOLzhJSmxJOHdDSU0zNENrb2swRXVNMkVvbkJaQ0tOeFRTcDhJOHhtVWlUVVM3T2lNbEVtZzYrQkEwb0Uva0FDTHVGbVFrV0FUS1JENElpS2FqeTkwMlBoMkI1SFFJQWEvY2VDck5MU1RiV0Vzb1FQd3FHWGY5N2h4SE84ajhJWnFlODJnSjYzL1N3OFBZeE9Sb2JoSkdEVmYvQnJ6QVdGaFlXRmhZV0ZscndIL3FmMFJPMy9nbHNBQUFBQUVsRlRrU3VRbUNDIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ9ImltZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJtYWlsdG86c3VwcG9ydEBjb25kdWN0aW9uLm5sIj5pbmZvQGNvbmR1Y3Rpb24ubmw8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+CjwvdGFibGU+CjwvYm9keT4KPC9odG1sPg==",
        "variables": {
            "subject": "hoofdObject.identificatie",
            "name": "object.persoon.contactnaam",
            "omschrijving": "hoofdObject.omschrijving",
            "header": "",
            "body": "Uw {{omschrijving}} zaak met identificatie {{subject}} is afgerond.",
            "footer": ""
        },
        "sender": "no-reply@conduction.nl",
        "receiver": "wilco@conduction.nl",
        "subject": "Zaak afgerond: {{subject}}",
        "replyTo": "info@conduction.nl"
    }
}