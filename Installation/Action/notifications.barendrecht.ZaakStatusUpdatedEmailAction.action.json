{
    "title": "Barendrecht ZaakStatusUpdatedEmailAction",
    "$id": "https://commongateway.nl/action/notifications.barendrecht.ZaakStatusUpdatedEmailAction.action.json",
    "$schema": "https://docs.commongateway.nl/schemas/Action.schema.json",
    "version": "0.0.1",
    "listens": ["notifications.barendrecht.zaak.status.updated.email"],
    "conditions":
    {
        "==": [1, 1]
    },
    "class": "CommonGateway\\CustomerNotificationsBundle\\ActionHandler\\EmailHandler",
    "configuration":
    {
        "serviceDNS": "",
        "template": "",
        "variables": {
            "subject": "hoofdObject.identificatie",
            "name": "object.persoon.contactnaam",
            "email": "object.embedded.voorkeurskanaal.adres",
            "omschrijving": "hoofdObject.omschrijving",
            "header": "",
            "body": "De status van uw {{omschrijving}} zaak met identificatie {{subject}} is gewijzigd.",
            "footer": ""
        },
        "sender": "no-reply@barendrecht.nl",
        "receiver": "{{email}}",
        "subject": "Zaak status gewijzigd: {{subject}}",
        "replyTo": "no-reply@barendrecht.nl"
    }
}